AC_PREREQ(2.59)
AC_INIT([jackguitar],[0.0.2],[Nate Lally <nate.lally@gmail.com>])
AM_INIT_AUTOMAKE(jackguitar, 0.0.2)
AC_CONFIG_SRCDIR([src])
AC_CONFIG_HEADERS([config.h])
AC_PROG_CC
AC_PROG_INSTALL
AC_CHECK_LIB([fftw3f], [fftwf_plan_dft_r2c_1d], , [AC_MSG_ERROR([Couldn't find FFTW3 library. You must install it first.])])
AC_CHECK_LIB([jack], [jack_client_new], , [AC_MSG_ERROR([Couldn't find JACK library. You must install it first.])])
#AC_CHECK_LIB([djbfft], [fftr4_256], , [AC_MSG_ERROR([Couldn't find djbfft library. You must install it first.])])

CFLAGS="$CFLAGS $JACK_CFAGS"
LIBS="$LIBS $JACK_LIBS"

pkg_modules="gtk+-2.0 >= 1.3.13"
PKG_CHECK_MODULES(PACKAGE, [$pkg_modules])
AC_SUBST(PACKAGE_CFLAGS)
AC_SUBST(PACKAGE_LIBS)

AC_CONFIG_FILES([Makefile src/Makefile])

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([stdlib.h string.h unistd.h])
                                                                                                                   
# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE

dnl Check for fft graph...
AC_MSG_CHECKING(for fft graph use)
AC_ARG_WITH(fftgraph,
  [  --with-graph=yes,no  compile with fft graph],
  fftgraph="$withval", fftgraph="yes")
CONFIG_USE_GRAPH=""
if test "$fftgraph" = "yes"; then
  CONFIG_USE_GRAPH="y"
fi
AC_SUBST(CONFIG_USE_GRAPH)
if test "$CONFIG_USE_GRAPH" = "y"; then
  AC_DEFINE(USE_GRAPH, [1], [use fft graph])
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
fi

#AC_DEFINE(USE_DJBFFT, [1], [use djbfft DFT backend])
AC_DEFINE(USE_FFTW, [1], [use fftw DFT backend])
                                                                       
# Checks for library functions.
AC_CHECK_FUNCS([atexit])

AC_OUTPUT
